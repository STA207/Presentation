install.packages("bookdown")
install.packages("bookdown")
knitr::opts_chunk$set(echo=FALSE,message=FALSE,warning=FALSE)
state_1 <- c( 'ct', 'nv', 'oh', 'or', 'sc', 'ut')
plot1 <- data %>%
filter(state %in% state_1) %>%
ggplot(aes(x = year, y  = fatal_rate, group = state)) +
geom_line()+
geom_point(aes(shape = jail), size = 3)+
scale_shape_manual(values=c(5, 17))+
geom_dl(aes(label = state), method = list("last.points", hjust = -.5)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
labs(y = "Fatality Rate", x = "Year")
knitr::opts_chunk$set(echo=FALSE,message=FALSE,warning=FALSE)
library(MatchIt)
library(dplyr)
library(ggplot2)
library(lme4)
library(dagitty)
library(ggdag)
library(AER)
library(pscl)
library(gridExtra)
library(influence.ME)
library(tidyverse)
data("Fatalities")
data = Fatalities
data['fr'] = data$fatal/data$pop*10000
dim(data)
data = data[!is.na(data$jail),]
data$jail = ifelse(data$jail == 'yes', 1, 0)
m_ps = glm(jail ~ year + spirits + unemp + income + beertax + baptist + mormon + drinkage + dry + youngdrivers + miles + breath + pop + gsp, family = binomial(), data = data)
summary(m_ps)
prs_df = data.frame(pr_score = predict(m_ps, type = "response"),
jail = m_ps$model$jail)
# logistic goodness of fit
pR2(m_ps)
#### Examining the region of common support
#After estimating the propensity score, it is useful to plot histograms of the estimated propensity scores by treatment status:
labs = paste("Actual jail law implemented:", c("Yes", "No"))
prs_df %>%
mutate(jail = ifelse(jail == 1, labs[1], labs[2])) %>%
ggplot(aes(x = pr_score)) +
geom_histogram(color = "white", bins = 30) +
facet_wrap(~jail) +
xlab("Probability of implementing mandatory jail sentence") +
theme_bw()
## Executing a matching algorithm
data_cov = c("year", "spirits" , "unemp" , "income" , "beertax" , "baptist" , "mormon" , "drinkage" , "dry" , "youngdrivers" , "miles" , "breath" , "pop" , "gsp")
mod_match = matchit(jail ~ year + spirits + unemp + income + beertax + baptist + mormon + drinkage + dry + youngdrivers + miles + breath + pop + gsp, method = "nearest", data = data)
dta_m = match.data(mod_match)
dim(dta_m)
fn_bal <- function(dta, variable) {
dta$variable <- dta[, variable]
dta$jail <- as.factor(dta$jail)
support <- c(min(dta$variable), max(dta$variable))
ggplot(dta, aes(x = distance, y = variable, color = jail)) +
geom_point(alpha = 0.2, size = 1.3) +
geom_smooth(method = "loess", se = F) +
xlab("Propensity score") +
ylab(variable) +
theme_bw() +
ylim(support)
}
grid.arrange(
#fn_bal(dta_m, "year"),
fn_bal(dta_m, "spirits"),
fn_bal(dta_m, "unemp"),
fn_bal(dta_m, "income"), #+ theme(legend.position = "none"),
fn_bal(dta_m, "beertax"),
#fn_bal(dta_m, "baptist"),
#fn_bal(dta_m, "mormon"),
fn_bal(dta_m, "drinkage"),
fn_bal(dta_m, "dry"),
fn_bal(dta_m, "youngdrivers"),
fn_bal(dta_m, "miles"),
#fn_bal(dta_m, "breath"),
fn_bal(dta_m, "pop"),
fn_bal(dta_m, "gsp"),
nrow = 4#, widths = c(1, 0.8)
)
#### Difference-in-means
dta_m_mean = dta_m %>%
group_by(jail) %>%
summarise_all(funs(mean))
dta_m_mean = dta_m_mean[,c('jail', data_cov)]
dta_m_mean
## Estimating treatment effects
with(dta_m, t.test(fr ~ jail))
summary(data$fr)
lm_treat1 <- lm(fr ~ jail, data = dta_m)
summary(lm_treat1)
confint(lm_treat1)
lm_orig = lm(fr ~ jail, data = data)
summary(lm_orig)
confint(lm_orig)
sum(dta_m$jail == 1) #94
sum(dta_m$jail == 0) #94
sum(data$jail == 1)
sum(data$jail == 0)
mean(dta_m$fr[dta_m$jail == 1]) - mean(dta_m$fr[dta_m$jail == 0])
mean(dta_m$fr[dta_m$jail == 0])
mean(dta_m$fr[dta_m$jail == 1])
mean(data$fr[data$jail == 1]) - mean(data$fr[data$jail == 0])
#What about if we inlcude state in the linear regression model
#Fixed
fit1 = lm(fr ~ jail + state, data = dta_m)
summary(fit1)
#Random
fit2 <- lmer(fr ~ jail + (1 | state), data = dta_m)
summary(fit2)
anova(fit2)
df = as.data.frame(coef(fit2)$state)
df
names(df) = c('a','j')
df$a = df$a - 1.99462
hist(df$a)
library("AER")
library(tidyverse)
data(Fatalities)
library("directlabels")
library(gridExtra)
data = Fatalities %>%
mutate(fatal_rate = fatal/pop*10000)
state_1 <- c( 'ct', 'nv', 'oh', 'or', 'sc', 'ut')
plot1 <- data %>%
filter(state %in% state_1) %>%
ggplot(aes(x = year, y  = fatal_rate, group = state)) +
geom_line()+
geom_point(aes(shape = jail), size = 3)+
scale_shape_manual(values=c(5, 17))+
geom_dl(aes(label = state), method = list("last.points", hjust = -.5)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
labs(y = "Fatality Rate", x = "Year")
plot1
#data[data$state == "ca" & data$year == "1988",]$jail = "no"
data <- data %>% drop_na()
plot2 <- data %>%
ggplot(aes(x = jail, y = fatal_rate))+
geom_boxplot(na.rm = TRUE) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
labs(y = "Fatality Rate", x = "Jail")
plot3 <- data %>%
ggplot(aes(x = year, y = fatal_rate))+
geom_boxplot(na.rm = TRUE) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
labs(y = "Fatality Rate", x = "Year")
grid.arrange(plot1, arrangeGrob(plot2, plot3, ncol = 2), ncol = 1, heights = c(.4/4, .3/4))
